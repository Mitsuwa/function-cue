apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: xnopresources.nop.example.org
spec:
  compositeTypeRef:
    apiVersion: nop.example.org/v1alpha1
    kind: XNopResource
  mode: Pipeline
  pipeline:
  - step: prime-objects
    functionRef:
      name: function-cue
    input:
      apiVersion: template.fn.crossplane.io/v1beta1
      kind: CUEInput
      metadata:
        name: prime-objects
      export:
        target: Resources
        options:
          expressions:
          - yaml.MarshalStream(output)
        value: |
          output: [
            {
              apiVersion: "s3.aws.upbound.io/v1beta1"
              kind: "Bucket"
              metadata: name: "test-bucket"
              spec: forProvider: region: "us-east-2"
            },
            {
              apiVersion: "ec2.aws.upbound.io/v1beta1"
              kind: "Instance"
              metadata: name: "someinstance"
              spec: forProvider: ami: "ami-0d9858aa3c6322f73"
              spec: forProvider: instanceType: "t2.micro"
              spec: forProvider: region: "us-east-2"
            }
          ]
  - step: patch-storage-bucket
    functionRef:
      name: function-cue
    input:
      apiVersion: template.fn.crossplane.io/v1beta1
      kind: CUEInput
      metadata:
        name: patch-xr
      export:
        target: PatchDesired
        value: |
          // Target the bucket by kind+name
          kind: "Bucket"
          metadata: name: "test-bucket"
          
          // Add fields here
          metadata: annotations: {
              "nobu.dev/cueified": "true",
              "nobu.dev/app": "someapp",
          }
          
          spec: forProvider: policy: "some-bucket-policy"
